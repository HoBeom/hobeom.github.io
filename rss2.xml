<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HOBE-NOTE</title>
    <link>http://hobeom.github.io/</link>
    
    <atom:link href="http://hobeom.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>경험을 존중하며 질문을 멈추지 않고 호기심과 상상력을 내 무기로 만들자</description>
    <pubDate>Sat, 23 Apr 2022 06:39:39 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Clean Code 02</title>
      <link>http://hobeom.github.io/2022/04/23/clean-code-02/</link>
      <guid>http://hobeom.github.io/2022/04/23/clean-code-02/</guid>
      <pubDate>Sat, 23 Apr 2022 05:15:33 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;클린코드-챌린지-02&quot;&gt;&lt;a href=&quot;#클린코드-챌린지-02&quot; class=&quot;headerlink&quot; title=&quot;클린코드 챌린지 02&quot;&gt;&lt;/a&gt;클린코드 챌린지 02&lt;/h1&gt;&lt;p&gt;오늘 TIL 3줄 요약&lt;/p&gt;
&lt;p&gt;궁극적으로 코드는 요구 사</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="클린코드-챌린지-02"><a href="#클린코드-챌린지-02" class="headerlink" title="클린코드 챌린지 02"></a>클린코드 챌린지 02</h1><p>오늘 TIL 3줄 요약</p><p>궁극적으로 코드는 요구 사항을 상세히 표현하는 수단이자 언어이다.<br>빨리 가기 위한 유일한 방법은, 언제나 코드를 깨끗하게 유지하는 습관이다.<br>캠프장은 처음 왔을 때보다 더 깨끗하게 해놓고 떠나라.</p><p>TIL (Today I Learned) 날짜</p><p>2022.04.23 - 2022.04.23</p><p>오늘 읽은 범위</p><p>1장. 깨끗한 코드</p><p>책에서 기억하고 싶은 내용을 써보세요.</p><p>코드가 존재하리라</p><p>코드를 자동으로 생성하는 기술은 현재에도 많은 연구가 진행되고 있지만 완전히 프로그래머를 대체할 수 없다.<br>요구 사항을 명시하는 작업 자체가 프로그래밍이자 코드이기에 기계가 우리의 의도를 정확하게 꿰뚫어 볼 수 없다. 우리조차 요구사항을 제대로 명시하지 못하고 있기 때문이다.</p><p>💡 코드는 요구 사항을 상세히 표현하는 수단이자 언어이다.</p><p>나쁜 코드로 치르는 대가</p><p>시간을 들여서 깨끗한 코드를 만드는 노력은 비용을 절감할 뿐만 아니라 프로그래머로써 살아남는 길이다.<br>나쁜 코드는 나쁜 코드를 유혹한다.<br>코드가 엉망진창인 상태라면 더 많은 나쁜 코드를 양산할 수밖에 없고 업무 속도를 더욱 더 늦추게된다.</p><p>💡 빨리 가기 위한 유일한 방법은, 언제나 코드를 깨끗하게 유지하는 습관이다.</p><p>보이스카우트 규칙</p><p>잘 짠 코드가 전부는 아니다. 시간이 지나도 언제나 깨끗하게 유지해야 한다. 시간이 지나면서 엉망으로 전략하는 코드는 발생 할 수 있다. 그러므로 우리는 적극적으로 코드의 퇴보를 막아야한다.<br>미국 보이스카우트가 따르는 간단한 규칙이 프로그래머에게도 유용하다.<br><strong>캠프장은 처음 왔을 때보다 더 깨끗하게 해놓고 떠나라.</strong></p><p>체크아웃할 때보다 좀 더 깨끗한 코드를 체크인한다면 코드는 절대 나빠지지 않는다.<br>한꺼번에 많은 시간과 노력을 투자해 코드를 정리할 필요는 없다.<br>시간이 지날수록 코드가 좋아지는 프로젝트, 지속적인 개선이야 말로 전문가 정신의 본질이다.</p><p>오늘 읽은 소감은? 떠오르는 생각을 가볍게 적어보세요</p><p>항상 깨끗한 코드를 작성해야한다는 강박이 있었던 것 같다.<br>하지만 보이스카우트 규칙을 읽으며, 개선된 코드를 만드는 노력을 “지속적으로” 하는것이 더 중요함을 깨달았다.<br>조금씩 발전하는 코드에 성취감을 느끼며 퇴보하지 않는 코드를 작성하는 보람을 느끼는 것이 중요하다고 느꼈다.</p><p>궁금한 내용이 있거나, 잘 이해되지 않는 내용이 있다면 적어보세요.</p><p>아름다운 코드란?</p>]]></content:encoded>
      
      
      <category domain="http://hobeom.github.io/categories/book-club-cleancode/">book-club-cleancode</category>
      
      
      <category domain="http://hobeom.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="http://hobeom.github.io/tags/%EA%B0%9C%EB%B0%9C%EC%9E%90/">개발자</category>
      
      <category domain="http://hobeom.github.io/tags/%EB%85%B8%EB%A7%88%EB%93%9C%EB%B6%81%ED%81%B4%EB%9F%BD/">노마드북클럽</category>
      
      <category domain="http://hobeom.github.io/tags/%EB%85%B8%EA%B0%9C%EB%B6%81/">노개북</category>
      
      
      <comments>http://hobeom.github.io/2022/04/23/clean-code-02/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Clean Code 01</title>
      <link>http://hobeom.github.io/2022/04/22/clean-code-01/</link>
      <guid>http://hobeom.github.io/2022/04/22/clean-code-01/</guid>
      <pubDate>Fri, 22 Apr 2022 05:43:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;클린코드-챌린지-01&quot;&gt;&lt;a href=&quot;#클린코드-챌린지-01&quot; class=&quot;headerlink&quot; title=&quot;클린코드 챌린지 01&quot;&gt;&lt;/a&gt;클린코드 챌린지 01&lt;/h1&gt;&lt;p&gt;바쁜 생활 템포를 가져오기 위해 책을 다시 손에 잡는다!!&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="클린코드-챌린지-01"><a href="#클린코드-챌린지-01" class="headerlink" title="클린코드 챌린지 01"></a>클린코드 챌린지 01</h1><p>바쁜 생활 템포를 가져오기 위해 책을 다시 손에 잡는다!!</p><p>다행히도 도서관에 책이 남아있었고 호다닥 빌려왔다.</p><p><img src="https://raw.githubusercontent.com/hobeom/Images/master/2022/04/upgit_20220422_1650611578.JPG" alt="bookimg"></p><p>짜짠</p>]]></content:encoded>
      
      
      <category domain="http://hobeom.github.io/categories/book-club-cleancode/">book-club-cleancode</category>
      
      
      <category domain="http://hobeom.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="http://hobeom.github.io/tags/%EA%B0%9C%EB%B0%9C%EC%9E%90/">개발자</category>
      
      <category domain="http://hobeom.github.io/tags/%EB%85%B8%EB%A7%88%EB%93%9C%EB%B6%81%ED%81%B4%EB%9F%BD/">노마드북클럽</category>
      
      <category domain="http://hobeom.github.io/tags/%EB%85%B8%EA%B0%9C%EB%B6%81/">노개북</category>
      
      
      <comments>http://hobeom.github.io/2022/04/22/clean-code-01/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>tf upgrade v2 cp949 window10</title>
      <link>http://hobeom.github.io/2020/06/18/tf-upgrade-v2-cp949-window10/</link>
      <guid>http://hobeom.github.io/2020/06/18/tf-upgrade-v2-cp949-window10/</guid>
      <pubDate>Thu, 18 Jun 2020 02:56:49 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Automatically-upgrade-code-to-TensorFlow-2-in-window-10&quot;&gt;&lt;a href=&quot;#Automatically-upgrade-code-to-TensorFlow-2-in-window-10&quot; class=&quot;h</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Automatically-upgrade-code-to-TensorFlow-2-in-window-10"><a href="#Automatically-upgrade-code-to-TensorFlow-2-in-window-10" class="headerlink" title="Automatically upgrade code to TensorFlow 2 in window 10"></a>Automatically upgrade code to TensorFlow 2 in window 10</h1><h2 id="tf-upgrade-v2-Script-cp949-error"><a href="#tf-upgrade-v2-Script-cp949-error" class="headerlink" title="tf_upgrade_v2 Script cp949 error"></a>tf_upgrade_v2 Script cp949 error</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> tf_upgrade_v2 -<span class="literal">-intree</span> . -<span class="literal">-outtree</span> ../tf2<span class="literal">-upgraded</span> -<span class="literal">-copyotherfiles</span> False</span><br><span class="line"><span class="number">2020</span><span class="literal">-06</span><span class="literal">-18</span> <span class="number">11</span>:<span class="number">35</span>:<span class="number">06.250559</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library cud</span><br><span class="line">art64_101.dll</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"C:\Anaconda3\envs\tf2\Scripts\tf_upgrade_v2-script.py"</span>, line <span class="number">10</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    sys.exit(main())</span><br><span class="line">  File <span class="string">"C:\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\tools\compatibility\tf_upgrade_v2_main.py"</span>, line <span class="number">160</span>, <span class="keyword">in</span> main</span><br><span class="line">    args.input_tree, output_tree, args.copy_other_files)</span><br><span class="line">  File <span class="string">"C:\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\tools\compatibility\ast_edits.py"</span>, line <span class="number">1069</span>, <span class="keyword">in</span> process_tree</span><br><span class="line">    _, l_report, l_errors = self.process_file(input_path, output_path)</span><br><span class="line">  File <span class="string">"C:\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\tools\compatibility\ast_edits.py"</span>, line <span class="number">917</span>, <span class="keyword">in</span> process_file</span><br><span class="line">    temp_file)</span><br><span class="line">  File <span class="string">"C:\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\tools\compatibility\ast_edits.py"</span>, line <span class="number">975</span>, <span class="keyword">in</span> process_opened_file</span><br><span class="line"></span><br><span class="line">lines = in_file.readlines()</span><br><span class="line"></span><br><span class="line">UnicodeDecodeError: <span class="string">'cp949'</span> codec can<span class="string">'t decode byte 0xec in position 202: illegal multibyte sequence</span></span><br></pre></td></tr></table></figure><p>tensorflow_core\tools\compatibility\ast_edits.py\ast_edits.py </p><p>Line 914 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(in_filename, <span class="string">"r"</span>) <span class="keyword">as</span> in_file,</span><br></pre></td></tr></table></figure><p>edit </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(in_filename, <span class="string">"r"</span>, encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> in_file,</span><br></pre></td></tr></table></figure><p>full code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pylint: disable=g-backslash-continuation</span></span><br><span class="line"><span class="keyword">with</span> open(in_filename, <span class="string">"r"</span>, encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> in_file, \</span><br><span class="line">    tempfile.NamedTemporaryFile(<span class="string">"w"</span>, delete=<span class="literal">False</span>) <span class="keyword">as</span> temp_file:</span><br><span class="line">  ret = self.process_opened_file(in_filename, in_file, out_filename,</span><br><span class="line">                                 temp_file)</span><br><span class="line"><span class="comment"># pylint: enable=g-backslash-continuation</span></span><br></pre></td></tr></table></figure><p>Delete folder exist, before Try tf_upgrade_v2 Script (Recommend PowerShell)</p>]]></content:encoded>
      
      
      <category domain="http://hobeom.github.io/categories/tensorflow/">tensorflow</category>
      
      
      <category domain="http://hobeom.github.io/tags/tensorflow2/">tensorflow2</category>
      
      <category domain="http://hobeom.github.io/tags/migration/">migration</category>
      
      <category domain="http://hobeom.github.io/tags/window10/">window10</category>
      
      
      <comments>http://hobeom.github.io/2020/06/18/tf-upgrade-v2-cp949-window10/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Centos8에 gitlab 설치하기</title>
      <link>http://hobeom.github.io/2020/06/11/Centos8-gitlab/</link>
      <guid>http://hobeom.github.io/2020/06/11/Centos8-gitlab/</guid>
      <pubDate>Thu, 11 Jun 2020 07:41:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Centos8에-gitlab설치하기&quot;&gt;&lt;a href=&quot;#Centos8에-gitlab설치하기&quot; class=&quot;headerlink&quot; title=&quot;Centos8에 gitlab설치하기&quot;&gt;&lt;/a&gt;Centos8에 gitlab설치하기&lt;/h1&gt;&lt;p&gt;새로</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Centos8에-gitlab설치하기"><a href="#Centos8에-gitlab설치하기" class="headerlink" title="Centos8에 gitlab설치하기"></a>Centos8에 gitlab설치하기</h1><p>새로운 프로젝트를 시작하면서 CI/CD와 많은 private 레파지토리가 필요하여 서버 컴퓨터에 centos8-gitlab을 올리는 과정을 기록하기 위해 Posting 합니다. 공식 설치방법을 따라 설치하는 것을 권장드립니다. 저는 공개라이센스인 gitlab core만 사용하기 위해 CE버전을 설치하였습니다.</p><blockquote><p>gitlab ce 공식 설치 스크립드: <a href="https://about.gitlab.com/install/#centos-8?version=ce" target="_blank" rel="noopener">https://about.gitlab.com/install/#centos-8?version=ce</a></p></blockquote><h2 id="종속성-설치"><a href="#종속성-설치" class="headerlink" title="종속성 설치"></a>종속성 설치</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y curl policycoreutils openssh-server openssh-clients</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> sshd</span><br><span class="line">sudo systemctl start sshd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check if opening the firewall is needed with: sudo systemctl status firewalld</span></span><br><span class="line">sudo firewall-cmd --permanent --add-service=http</span><br><span class="line">sudo firewall-cmd --permanent --add-service=https</span><br><span class="line">sudo systemctl reload firewalld</span><br></pre></td></tr></table></figure><p>ssh서비스를 설치하고 http, https 방화벽을 열어줍니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install postfix</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> postfix</span><br><span class="line">sudo systemctl start postfix</span><br></pre></td></tr></table></figure><p>postfix를 설치하여 이메일 서비스를 사용할 수 있도록 합니다.</p><h2 id="gitlab-ce-패키지-설치"><a href="#gitlab-ce-패키지-설치" class="headerlink" title="gitlab-ce 패키지 설치"></a>gitlab-ce 패키지 설치</h2><p>curl을 이용하여 gitlab을 등록합니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure><p>등록이 되었으므로 이제 yum을 이용하여 설치가 가능합니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo EXTERNAL_URL=<span class="string">"접속할 도메인 혹은 IP"</span> dnf install -y gitlab-ce</span><br></pre></td></tr></table></figure><p>접속할 도메인을 EXTERNAL_URL 변수에 저장하고 설치를 진행합니다. 도메인이 없다면 IP를 넣어주셔도 됩니다.</p><p>저는 제 공유기에 할당된 도메인을 사용하기 때문에 다음과 같이 설치하였습니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo EXTERNAL_URL=<span class="string">"https://algora.iptime.org"</span> dnf install -y gitlab-ce</span><br></pre></td></tr></table></figure><p>설치가 완료되면 첫 화면에서  root 비밀번호를 설정해야 합니다.</p><h2 id="gitlab-https-설정"><a href="#gitlab-https-설정" class="headerlink" title="gitlab-https 설정"></a>gitlab-https 설정</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/37523098/84371672-f8b29d00-ac14-11ea-8eaf-c8594b678896.png" alt="image"></p><p>/nginx[  로 검색하여 다음과 같이 설정파일을 고칩니다.</p><p>/lets 를이용하여 검색하여 밑에 사진과 같이 설정파일을 고칩니다.</p><p><img src="https://user-images.githubusercontent.com/37523098/84365921-1d0a7b80-ac0d-11ea-8a4d-2026b9753f01.png" alt="image"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl renew-le-certs</span><br><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h2 id="비밀번호-설정-및-로그인"><a href="#비밀번호-설정-및-로그인" class="headerlink" title="비밀번호 설정 및 로그인"></a>비밀번호 설정 및 로그인</h2><p><img src="https://user-images.githubusercontent.com/37523098/84364079-9a80bc80-ac0a-11ea-8636-17e8fa61b6b2.png" alt="img"></p><p>다음 화면에서 root 패스워드를 설정합니다. 8자리이상에 특수문자를 포함해야 합니다. 설정이 완료되면 root계정으로 로그인합니다.</p><p><img src="https://user-images.githubusercontent.com/37523098/84364668-5b06a000-ac0b-11ea-84fa-79d9026dd37f.png" alt="image"></p><p>로그인을 하게되면 깃랩의 첫화면이 나오게됩니다!</p><p><img src="https://user-images.githubusercontent.com/37523098/84364829-8f7a5c00-ac0b-11ea-91cf-ec3fa15fc66b.png" alt="image"></p><p>다음 포스팅에서는 프로젝트를 생성하고 gitlab-runner를 등록하여 자동으로 서비스를 배포하는 pipline을 구성해보겠습니다.</p><blockquote><p>참고한 사이트</p><p><a href="https://about.gitlab.com/" target="_blank" rel="noopener">https://about.gitlab.com/</a></p><p><a href="https://ux.stories.pe.kr/161" target="_blank" rel="noopener">https://ux.stories.pe.kr/161</a></p><p><a href="https://tecadmin.net/install-gitlab-on-centos-8/" target="_blank" rel="noopener">https://tecadmin.net/install-gitlab-on-centos-8/</a></p><p><a href="https://docs.gitlab.com/omnibus/settings/ssl.html" target="_blank" rel="noopener">https://docs.gitlab.com/omnibus/settings/ssl.html</a></p><p><a href="https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/4553" target="_blank" rel="noopener">https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/4553</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="http://hobeom.github.io/categories/gitlab/">gitlab</category>
      
      
      <category domain="http://hobeom.github.io/tags/Centos8/">Centos8</category>
      
      <category domain="http://hobeom.github.io/tags/gitlab/">gitlab</category>
      
      
      <comments>http://hobeom.github.io/2020/06/11/Centos8-gitlab/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>testPost</title>
      <link>http://hobeom.github.io/2020/03/14/testPost/</link>
      <guid>http://hobeom.github.io/2020/03/14/testPost/</guid>
      <pubDate>Sat, 14 Mar 2020 06:05:35 GMT</pubDate>
      
      
      
      
      <category domain="http://hobeom.github.io/categories/testPosts/">testPosts</category>
      
      
      <category domain="http://hobeom.github.io/tags/post/">post</category>
      
      <category domain="http://hobeom.github.io/tags/test/">test</category>
      
      <category domain="http://hobeom.github.io/tags/hexo/">hexo</category>
      
      
      <comments>http://hobeom.github.io/2020/03/14/testPost/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://hobeom.github.io/2020/02/22/hello-world/</link>
      <guid>http://hobeom.github.io/2020/02/22/hello-world/</guid>
      <pubDate>Sat, 22 Feb 2020 09:18:26 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>http://hobeom.github.io/2020/02/22/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
